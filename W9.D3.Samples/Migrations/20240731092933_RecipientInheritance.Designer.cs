// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using W9.D3.Samples.DataLayer;

#nullable disable

namespace W9.D3.Samples.Migrations
{
    [DbContext(typeof(ContactsDbContext))]
    [Migration("20240731092933_RecipientInheritance")]
    partial class RecipientInheritance
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("W9.D3.Samples.DataLayer.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("W9.D3.Samples.DataLayer.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("W9.D3.Samples.DataLayer.Entities.Recipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<bool>("IsWork")
                        .HasColumnType("bit");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Recipient");

                    b.HasDiscriminator<int>("type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("W9.D3.Samples.DataLayer.Entities.Email", b =>
                {
                    b.HasBaseType("W9.D3.Samples.DataLayer.Entities.Recipient");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("W9.D3.Samples.DataLayer.Entities.PhoneNumber", b =>
                {
                    b.HasBaseType("W9.D3.Samples.DataLayer.Entities.Recipient");

                    b.Property<string>("NationalCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("W9.D3.Samples.DataLayer.Entities.Contact", b =>
                {
                    b.HasOne("W9.D3.Samples.DataLayer.Entities.Department", null)
                        .WithMany("OwnedContacts")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("W9.D3.Samples.DataLayer.Entities.Recipient", b =>
                {
                    b.HasOne("W9.D3.Samples.DataLayer.Entities.Contact", null)
                        .WithMany("Recipients")
                        .HasForeignKey("ContactId");
                });

            modelBuilder.Entity("W9.D3.Samples.DataLayer.Entities.Contact", b =>
                {
                    b.Navigation("Recipients");
                });

            modelBuilder.Entity("W9.D3.Samples.DataLayer.Entities.Department", b =>
                {
                    b.Navigation("OwnedContacts");
                });
#pragma warning restore 612, 618
        }
    }
}
